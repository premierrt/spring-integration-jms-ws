klient jms activemq (canoncial model ) ---> spring integration  --> gateway WS outbound
_______________________________
how to run:
/home/rafal/Pobrane/apache-activemq-5.15.2/bin/activemq start
http://127.0.0.1:8161/admin/index.jsp
dodać kolejkę recznie zeby testow
-------------------------------------------


--dopisać junity!!!
--dopisac asercje i outbound capture:
https://examples.javacodegeeks.com/enterprise-java/spring/integration/spring-boot-integration-activemq-example/

-jak z message jms (string) zrobic obiekt??? --> serializacja obiektu
http://www.coderpanda.com/jms-tutorial-sending-object-as-message-in-jms/
-service werjsciowy przyjmuje message, transformer trasforumuje na obiekt domenowy i wywoluje inny serwis,
 ktory wywoluje transformer i ws
-dodać klienta ws  --> https://spring.io/guides/gs/consuming-web-service/ --> http://www.webservicex.com/New/Home/ServiceDetail/17
-przeniesc kofiguracje kolejki do xml-a -----> http://www.javarticles.com/2015/02/example-of-message-driven-channel-adapter.html
-dodać druga apilikacje w modelu publish - subscriber
-wysylac XML-a przez jms
-----zrobic przyklad ze na si przetwarzam tylko xml-a - nie konwertuje na obiekt, tylko xpathem znajde fragment, filtrue, uzupelniam i wypycham do WS-a

https://examples.javacodegeeks.com/enterprise-java/spring/integration/spring-boot-integration-activemq-example/
http://www.javarticles.com/2015/02/example-of-message-driven-channel-adapter.html
https://dzone.com/articles/spring-boot-example-of-spring-integration-and-acti
https://springframework.guru/spring-boot-example-of-spring-integration-and-activemq/




ActiveMQ:
/home/rafal/Pobrane/apache-activemq-5.15.2/bin/activemq start
http://127.0.0.1:8161/admin/index.jsp
dodać kolejkę recznie zeby testowac

http://activemq.apache.org/getting-started.html#GettingStarted-TestingtheInstallationTestingtheInstallation
http://blog.christianposta.com/spring-integration/backing-spring-integration-routes-with-activemq/

http://activemq.apache.org/how-do-i-create-new-destinations.html


-jms spiring:
https://dzone.com/articles/spring-jms-activemq
http://www.coderpanda.com/jms-tutorial-sending-object-as-message-in-jms/


-xml w jms
--najpierw marshaling danych na wesjsciu - czyli obiekt w obiekcie dodac anotacje w jaxb do xml i do string i wstawić jako textmessage
https://www.mkyong.com/java/jaxb-hello-world-example/
http://www.java2s.com/Code/Java/JDK-6/MarshalJavaobjecttoxmlandoutputtoconsole.htm

--sprawdzic mozliwosc spingowego x/o marshallingu


-- > podlaczyc unmarshallera:
https://coderanch.com/t/314831/java/Creating-JMS-TextMessage-XML
https://docs.spring.io/spring-ws/sites/1.5/reference/html/oxm.html
https://github.com/spring-projects/spring-integration/blob/master/spring-integration-jms/src/test/java/org/springframework/integration/jms/config/JmsWithMarshallingMessageConverterTests.java
 
https://examples.javacodegeeks.com/enterprise-java/jms/jms-textmessage-example/
https://www.javaworld.com/article/2076274/core-java/jms--an-infrastructure-for-xml-based-business-to-business-communication.html?page=3
https://stackoverflow.com/questions/10368343/what-is-benefit-of-sending-xml-using-jms
https://github.com/spring-projects/spring-integration/blob/master/spring-integration-jms/src/test/java/org/springframework/integration/jms/config/JmsWithMarshallingMessageConverterTests-context.xml
https://docs.spring.io/spring-integration/reference/html/jms.html

Spring
-configuration i Bean
http://techblog.outbrain.com/2014/05/so-long-spring-xmls/
---gdzie sie definiuje propertisy do xmla z beanami - np url ws-a

EIP:
-canonical model http://www.enterpriseintegrationpatterns.com/patterns/messaging/CanonicalDataModel.html
--recipientlistrouter vs publish subscriber?
http://www.enterpriseintegrationpatterns.com/patterns/messaging/RecipientList.html
-https://docs.spring.io/spring-integration/docs/2.1.1.RELEASE/reference/html/messaging-routing-chapter.html#router-implementations-recipientlistrouter
--output channel adapter vs service activator
The simple explanation is this. If you want to invoke a *void* method on a bean, then you can use OCA or SA.
However, if you have non-void methods on the bean this means that your endpoint will not only receive a Message but will alos produce a Message which has to go somewhere and Service Activator allows you to define output-channel as well as input-channel.
The bottom line is that adapters (both inbound and outbound) are unidirectional. The inbound generally implies the start of the flow and the outbound the end of the flow. And then there are gateway which is a whole other subject.



maven:
uruchamienia activeMQ przez maven. dodaje plugin i przypisuje go do fazy test ( dodac build-plugin-execution-goal
https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
https://tech.pookey.co.uk/playing-with-activemq-using-maven/



WebServices:
https://www.javacodegeeks.com/2015/09/spring-integration-and-web-services.html
-https://dzone.com/articles/spring-integration-hands-0

soap action!!!!!!!!!!
https://github.com/spring-projects/spring-integration-samples/blob/master/basic/testing-examples/src/main/resources/META-INF/spring/integration/04-externalgateway/real-gateways.xml

